---
# install rundeck
- include: install_debian.yml
  when: ansible_os_family == 'Debian'

- include: install_redhat.yml
  when: ansible_os_family == 'RedHat'

- name: Debian | discover version number
  shell: dpkg -s rundeck | grep -i version
  register: rundeck_targeting_version
  when: ansible_os_family == 'Debian'

- name: RedHat | discover version number
  shell: yum info rundeck | grep -i version
  register: rundeck_targeting_version
  become: true
  when: ansible_os_family == 'RedHat'

# corrections to run with other jetty applications
#  create groups and adjust user
- name: Install | Ensure jetty group exists
  group:
    name: jetty
    system: yes
  become: true
  tags:
    - rundeck
    - users
    - groups

- name: Install | Ensure rundeck user is apart of jetty group
  user:
    name: rundeck
    groups: jetty
    createhome: yes
    home: /var/lib/rundeck
    system: yes
  become: true
  tags:
    - rundeck
    - users
    - groups

- name: Install | Allow rundeck user to have passwordless sudo
  lineinfile:
        dest: /etc/sudoers
        state: present
        regexp: '^rundeck'
        line: 'rundeck ALL=(ALL) NOPASSWD: ALL'
        validate: visudo -cf %s
  become: true

- name: Install | configure ssh private key for bitbucket
  copy:
    content: |
      host {{ rundeck_bitbucket_host_external }}
        HostName {{ rundeck_bitbucket_host_internal }}
        IdentityFile ~/.ssh/id_rsa_bitbucket
        User {{ rundeck_cduser_name }}
    dest: "{{ rundeck_home_dir }}/.ssh/config"
    owner: "{{ rundeck_user }}"
    group: "{{ rundeck_group }}"
    mode: 0644
  become: true

- name: Install | Add private ssh key of cd_user
  copy:
    content: "{{ rundeck_cduser_private_key }}"
    dest: "{{ rundeck_home_dir }}/.ssh/id_rsa_bitbucket"
    owner: "{{ rundeck_user }}"
    group: "{{ rundeck_group }}"
    mode: 0600
  become: true

- name: Install | Ensure home directory has correct permissions
  file:
    path: /var/lib/rundeck
    state: directory
    owner: rundeck
    group: rundeck
    mode: 0755
  become: true
  tags:
    - rundeck
    - users

- name: Install | Ensure tmp directory has correct permissions
  file:
    path: /tmp/rundeck
    state: directory
    owner: rundeck
    mode: 0755
  become: true
  tags:
    - rundeck
    - users

# configuration adjustment
- name: Install | Ensure upstart setgid is set to jetty group
  lineinfile:
    dest: /etc/init/rundeckd.conf
    regexp: "^setgid "
    line: "setgid jetty"
  when: ansible_os_family == 'Debian'
  become: true
  notify:
    - restart rundeck
  tags:
    - rundeck
    - configuration

- name: Install | Ensure server url is configured (rundeck-config.properties)
  lineinfile:
    dest: /etc/rundeck/rundeck-config.properties
    regexp: "^grails.serverURL="
    line: "grails.serverURL={{ rundeck_protocol }}://{{ rundeck_domain }}"
  become: true
  notify:
    - restart rundeck
  tags:
    - rundeck
    - configuration

- name: Install | Ensure server url is configured (framework.properties)
  lineinfile:
    dest: /etc/rundeck/framework.properties
    regexp: "^framework\\.server\\.url\\s*\\=s*"
    line: "framework.server.url = {{ rundeck_protocol }}://{{ rundeck_domain }}"
  become: true
  notify:
    - restart rundeck
  tags:
    - rundeck
    - configuration

# vendor database setup
- include: postgresql.yml
  when: rundeck_database_type == 'postgresql'
  become: true

- include: mysql.yml
  when: rundeck_database_type == 'mysql'

# user management
- include: users.yml

# optional LDAP integration
- include: ldap.yml
  when: rundeck_ldap == True

# optional Atlassian Crowd integration
- include: crowd.yml
  when: rundeck_crowd == True
  become: true


- name: set context directory of rundeck installation
  lineinfile:
    dest: "{{ rundeck_conf_dir }}/profile"
    regexp: "^RDECK_JVM.*-Dserver.web.context.*$"
    insertbefore: 'rundeckd'
    line: 'RDECK_JVM="$RDECK_JVM -Dserver.web.context={{ rundeck_contextpath}}"'
  become: true
  notify:
    - restart rundeck


# extras
- name: download rundeck plugins
  get_url:
    dest: /var/lib/rundeck/libext/{{ item.split('/')|last }}
    url: "{{ item }}"
    owner: "{{ rundeck_user }}"
    group: "{{ rundeck_group }}"
  with_items: "{{ rundeck_plugins }}"
  become: true
  notify:
    - restart rundeck
  tags:
    - rundeck
    - plugins

# ssh key generation
- include: ssh.yml
  when: rundeck_generate_ssh == True


- name: configure email servers
  blockinfile:
    path: "{{ rundeck_conf_dir }}/rundeck-config.properties"
    block: |
      grails.mail.host={{ rundeck_smtp_server }}
      grails.mail.port={{ rundeck_smtp_port }}
      grails.mail.default.from={{ rundeck_mail_from }}
    marker: "# {mark} ANSIBLE MANAGED BLOCK (EMAIL)"
  become: true
  notify:
    - restart rundeck
