---
- hosts: "{{ target_hosts | default('tag_hostgroup_atlassian_db') }}"
  gather_facts: False
  tasks:
    - name: "create database users"
      delegate_to: 127.0.0.1
      command: psql -U {{ postgresql_root_login_user }} -h {{ postgresql_host}} -d {{ database_name }} -c "CREATE USER {{ item.name}} WITH PASSWORD '{{ item.password }}'"
      environment:
        PGPASSWORD: "{{ postgresql_root_login_password }}"
      with_items:
        - { name: "eazybi_jira", password: "{{eazybi_database_user_password}}"}
        - { name: "crowd", password: "{{crowd_database_user_password}}"}
        - { name: "crowdid", password: "{{crowdid_database_user_password }}"}
        - { name: "jira", password: "{{atlassian_jira_jdbc_password}}"}
        - { name: "bitbucket", password: "{{bitbucket_database_user_password}}"}
        - { name: "confluence", password: "{{atlassian_confluence_jdbc_password}}"}
        - { name: "rundeck", password: "{{ rundeck_database_pass }}"}
      register: user_results
      ignore_errors: true

    - name: "fail if error not because user already exists"
      fail:
        msg: "creation of users failed {{ item.stderr }}"
      when: "'already exists' not in item.stderr and item is failed"
      with_items: "{{ user_results.results }}"

    - name: "grant newly created roles / users to root user"
      delegate_to: 127.0.0.1
      command: psql -U {{ postgresql_root_login_user }} -h {{ postgresql_host}} -d {{ database_name }} -c "GRANT {{ item }} TO {{ postgresql_root_login_user }}"
      environment:
        PGPASSWORD: "{{ postgresql_root_login_password }}"
      with_items:
      - eazybi_jira
      - crowd
      - crowdid
      - jira
      - bitbucket
      - confluence
      - rundeck

    - name: create databases
      delegate_to: 127.0.0.1
      command: >
        psql
        -U {{ postgresql_root_login_user }}
        -h {{ postgresql_host}}
        -d {{ database_name }}
        -c
        "CREATE DATABASE {{ item }}
        WITH ENCODING='UTF8'
        OWNER={{ item }}
        CONNECTION LIMIT=-1"
      environment:
        PGPASSWORD: "{{ postgresql_root_login_password }}"
      register: dbcreation_results
      ignore_errors: true
      with_items:
      - eazybi_jira
      - crowd
      - crowdid
      - bitbucket
      - confluence
      - rundeck

    - name: debug
      debug:
        msg: "{{ item }}"
      with_items: "{{dbcreation_results.results }}"

    - name: "fail if not because db exists"
      fail:
        msg: "creation of database failed {{ item.stderr }}"
      when: "'already exists' not in item.stderr and item.rc"
      with_items: "{{ dbcreation_results.results }}"

    - name: "create database schemas"
      delegate_to: 127.0.0.1
      command: psql -U {{ postgresql_root_login_user }} -h {{ postgresql_host}} -d {{ database_name }} -c "CREATE SCHEMA AUTHORIZATION {{ item.owner }}"
      environment:
        PGPASSWORD: "{{ postgresql_root_login_password }}"
      with_items:
        - { name: "jira", owner: "jira"}
      register: schema_results
      ignore_errors: true

    - name: "fail if error not because schema already exists"
      fail:
        msg: "creation of users failed {{ schema_results.stderr }}"
      when: "'already exists' not in item.stderr and item is failed"
      with_items: "{{ schema_results.results }}"
  vars:
    database_name: atlassian
